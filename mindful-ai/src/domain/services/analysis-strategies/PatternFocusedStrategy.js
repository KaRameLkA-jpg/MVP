export class PatternFocusedStrategy {
  buildPrompt(messages, assistantPrompt) {
    return `
      –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: ${assistantPrompt}
      
      –î–∏–∞–ª–æ–≥: ${messages.map(m => `${m.role}: ${m.content}`).join('\n')}
      
      –°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–∞ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞:
      1. –ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è –∏–ª–∏ –º—ã—à–ª–µ–Ω–∏—è
      2. –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã –∏ —Ü–∏–∫–ª—ã –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ
      3. –°–∫—Ä—ã—Ç—ã–µ —É–±–µ–∂–¥–µ–Ω–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
      
      –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –≤ JSON:
      {
        "strategy": "pattern-focused",
        "insights": ["–∫–ª—é—á–µ–≤–æ–π –ø–∞—Ç—Ç–µ—Ä–Ω 1", "–≤–∞–∂–Ω—ã–π —Ü–∏–∫–ª 2", "—Å–∫—Ä—ã—Ç–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ 3"],
        "emotions": ["—ç–º–æ—Ü–∏—è —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å –ø–∞—Ç—Ç–µ—Ä–Ω–æ–º", "—á—É–≤—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è", "—Ä–µ–∞–∫—Ü–∏—è –Ω–∞ —Ü–∏–∫–ª"],
        "patterns": ["–ø–æ–≤–µ–¥–µ–Ω—á–µ—Å–∫–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω 1", "–º—ã—Å–ª–µ–Ω–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω 2", "—Ä–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ç–µ–º–∞ 3"],
        "recommendations": ["—Å–ø–æ—Å–æ–± –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ 1", "—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –æ—Å–æ–∑–Ω–∞–Ω–∏—è 2", "–º–µ—Ç–æ–¥ —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ 3"]
      }
    `
  }

  extractInsights(analysis) {
    console.log('üîÑ [PatternFocusedStrategy] –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Å–∞–π—Ç—ã:', {
      analysisType: typeof analysis,
      hasStrategy: 'strategy' in analysis,
      hasInsights: 'insights' in analysis
    })

    try {
      // analysis —É–∂–µ –æ–±—ä–µ–∫—Ç, –Ω–µ –Ω—É–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å JSON
      const result = {
        strategy: 'pattern-focused',
        insights: analysis.insights || [],
        emotions: analysis.emotions || [],
        patterns: analysis.patterns || analysis.behaviorPatterns || analysis.thoughtPatterns || analysis.recursiveThemes || [],
        recommendations: analysis.recommendations || analysis.underlyingBeliefs || []
      }

      console.log('‚úÖ [PatternFocusedStrategy] –ò–Ω—Å–∞–π—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω—ã:', {
        strategy: result.strategy,
        insights: result.insights.length,
        emotions: result.emotions.length,
        patterns: result.patterns.length,
        recommendations: result.recommendations.length
      })

      return result
    } catch (error) {
      console.warn('‚ö†Ô∏è [PatternFocusedStrategy] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback:', error.message)
      return {
        strategy: 'pattern-focused',
        insights: ['–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'],
        emotions: [],
        patterns: [],
        recommendations: []
      }
    }
  }
}