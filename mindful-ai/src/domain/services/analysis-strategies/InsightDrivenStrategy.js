export class InsightDrivenStrategy {
  buildPrompt(messages, assistantPrompt) {
    return `
      –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: ${assistantPrompt}
      
      –î–∏–∞–ª–æ–≥: ${messages.map(m => `${m.role}: ${m.content}`).join('\n')}
      
      –°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–∞ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞:
      1. –ì–ª—É–±–æ–∫–∏–µ –∏–Ω—Å–∞–π—Ç—ã –∏ –ø—Ä–æ–∑—Ä–µ–Ω–∏—è
      2. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è
      3. –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—É –∏ –∂–∏–∑–Ω–µ–Ω–Ω—ã–µ —É—Ä–æ–∫–∏
      
      –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –≤ JSON:
      {
        "strategy": "insight-driven",
        "insights": ["–≥–ª—É–±–æ–∫–∏–π –∏–Ω—Å–∞–π—Ç 1", "–∫–ª—é—á–µ–≤–æ–µ –ø—Ä–æ–∑—Ä–µ–Ω–∏–µ 2", "–≤–∞–∂–Ω–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ 3"],
        "emotions": ["—á—É–≤—Å—Ç–≤–æ –ø–æ–∏—Å–∫–∞ —Å–º—ã—Å–ª–∞", "–∂–µ–ª–∞–Ω–∏–µ —Ä–æ—Å—Ç–∞", "—Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é"],
        "patterns": ["–ø–∞—Ç—Ç–µ—Ä–Ω —Å–∞–º–æ–ø–æ–∑–Ω–∞–Ω–∏—è", "—Ü–∏–∫–ª –æ–±—É—á–µ–Ω–∏—è", "–ø—Ä–∏–≤—ã—á–∫–∞ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏"],
        "recommendations": ["–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–æ—Å—Ç–∞ 1", "–∂–∏–∑–Ω–µ–Ω–Ω—ã–π —É—Ä–æ–∫ 2", "–¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞ 3"]
      }
    `
  }

  extractInsights(analysis) {
    console.log('üîç [InsightDrivenStrategy] –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Å–∞–π—Ç—ã:', {
      analysisType: typeof analysis,
      hasStrategy: 'strategy' in analysis,
      hasInsights: 'insights' in analysis
    })

    try {
      // analysis —É–∂–µ –æ–±—ä–µ–∫—Ç, –Ω–µ –Ω—É–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å JSON
      const result = {
        strategy: 'insight-driven',
        insights: analysis.insights || analysis.deepInsights || [],
        emotions: analysis.emotions || [],
        patterns: analysis.patterns || [],
        recommendations: analysis.recommendations || analysis.growthOpportunities || analysis.lifeWisdom || analysis.longTermPerspective || []
      }

      console.log('‚úÖ [InsightDrivenStrategy] –ò–Ω—Å–∞–π—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω—ã:', {
        strategy: result.strategy,
        insights: result.insights.length,
        emotions: result.emotions.length,
        patterns: result.patterns.length,
        recommendations: result.recommendations.length
      })

      return result
    } catch (error) {
      console.warn('‚ö†Ô∏è [InsightDrivenStrategy] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback:', error.message)
      return {
        strategy: 'insight-driven',
        insights: ['–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'],
        emotions: [],
        patterns: [],
        recommendations: []
      }
    }
  }
}