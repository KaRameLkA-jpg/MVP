export class EmotionFocusedStrategy {
  buildPrompt(messages, assistantPrompt) {
    return `
      –ö–æ–Ω—Ç–µ–∫—Å—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞: ${assistantPrompt}
      
      –î–∏–∞–ª–æ–≥: ${messages.map(m => `${m.role}: ${m.content}`).join('\n')}
      
      –°–¥–µ–ª–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–∞ —Å —Ñ–æ–∫—É—Å–æ–º –Ω–∞:
      1. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –¥–∏–Ω–∞–º–∏–∫–∞ —á—É–≤—Å—Ç–≤
      2. –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ —Ç—Ä–∏–≥–≥–µ—Ä—ã
      3. –°–ø–æ—Å–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–π —Ä–µ–≥—É–ª—è—Ü–∏–∏
      
      –§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –≤ JSON:
      {
        "strategy": "emotion-focused",
        "insights": ["—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Å–∞–π—Ç 1", "–ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è 2", "–¥–∏–Ω–∞–º–∏–∫–∞ —á—É–≤—Å—Ç–≤ 3"],
        "emotions": ["–æ—Å–Ω–æ–≤–Ω–∞—è —ç–º–æ—Ü–∏—è 1", "—Å–æ–ø—É—Ç—Å—Ç–≤—É—é—â–µ–µ —á—É–≤—Å—Ç–≤–æ 2", "—Å–∫—Ä—ã—Ç–æ–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–µ 3"],
        "patterns": ["—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ç—Ä–∏–≥–≥–µ—Ä 1", "–ø–∞—Ç—Ç–µ—Ä–Ω —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è 2", "—Ü–∏–∫–ª —á—É–≤—Å—Ç–≤ 3"],
        "recommendations": ["—Å—Ç—Ä–∞—Ç–µ–≥–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ 1", "—Å–ø–æ—Å–æ–± —Ä–µ–≥—É–ª—è—Ü–∏–∏ 2", "–ø—Ä–∞–∫—Ç–∏–∫–∞ —Ä–æ—Å—Ç–∞ 3"]
      }
    `
  }

  extractInsights(analysis) {
    console.log('üíó [EmotionFocusedStrategy] –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Å–∞–π—Ç—ã:', {
      analysisType: typeof analysis,
      hasStrategy: 'strategy' in analysis,
      hasInsights: 'insights' in analysis
    })

    try {
      // analysis —É–∂–µ –æ–±—ä–µ–∫—Ç, –Ω–µ –Ω—É–∂–Ω–æ –ø–∞—Ä—Å–∏—Ç—å JSON
      const result = {
        strategy: 'emotion-focused',
        insights: analysis.insights || [],
        emotions: analysis.emotions || analysis.emotionalStates || [],
        patterns: analysis.patterns || analysis.emotionalTriggers || [],
        recommendations: analysis.recommendations || analysis.supportStrategies || analysis.emotionalGrowth || []
      }

      console.log('‚úÖ [EmotionFocusedStrategy] –ò–Ω—Å–∞–π—Ç—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–≤–ª–µ—á–µ–Ω—ã:', {
        strategy: result.strategy,
        insights: result.insights.length,
        emotions: result.emotions.length,
        patterns: result.patterns.length,
        recommendations: result.recommendations.length
      })

      return result
    } catch (error) {
      console.warn('‚ö†Ô∏è [EmotionFocusedStrategy] –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º fallback:', error.message)
      return {
        strategy: 'emotion-focused',
        insights: ['–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'],
        emotions: [],
        patterns: [],
        recommendations: []
      }
    }
  }
}