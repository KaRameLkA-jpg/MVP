export class ClaudeProvider {
  constructor() {
    this.apiKey = process.env.ANTHROPIC_API_KEY
    this.model = process.env.CLAUDE_MODEL || 'claude-3-sonnet-20240229'
    this.baseUrl = 'https://api.anthropic.com/v1/messages'
    
    if (!this.apiKey) {
      throw new Error('ANTHROPIC_API_KEY environment variable is required')
    }
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –≤ Claude API –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–∞
   * @param {string} prompt - –ü—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
   * @param {Array} messages - –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
   * @param {Object} options - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏
   * @returns {Promise<Object>} - –û—Ç–≤–µ—Ç Claude —Å –∞–Ω–∞–ª–∏–∑–æ–º
   */
  async analyzeDialogue(prompt, messages = [], options = {}) {
    const {
      maxTokens = 1000,
      temperature = 0.7,
      assistantType = 'coach'
    } = options

    console.log('ü§ñ [ClaudeProvider] –ù–∞—á–∏–Ω–∞–µ–º –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–∞:', {
      assistantType,
      messagesCount: messages.length,
      promptLength: prompt.length
    })

    try {
      const systemPrompt = this._buildSystemPrompt(assistantType, prompt)
      console.log('üìã [ClaudeProvider] –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å–æ–∑–¥–∞–Ω:', {
        systemPromptLength: systemPrompt.length,
        systemPromptPreview: systemPrompt.substring(0, 300) + '...'
      })
      
      const conversationContext = this._buildConversationContext(messages)
      console.log('üí¨ [ClaudeProvider] –ö–æ–Ω—Ç–µ–∫—Å—Ç –¥–∏–∞–ª–æ–≥–∞:', {
        contextMessages: conversationContext.length
      })

      const requestPayload = {
        model: this.model,
        max_tokens: maxTokens,
        temperature,
        system: systemPrompt,
        messages: conversationContext
      }
      console.log('üì§ [ClaudeProvider] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Claude:', {
        model: requestPayload.model,
        max_tokens: requestPayload.max_tokens,
        temperature: requestPayload.temperature,
        systemLength: requestPayload.system.length,
        messagesCount: requestPayload.messages.length
      })

      const response = await this._makeRequest(requestPayload)
      console.log('üì• [ClaudeProvider] –û—Ç–≤–µ—Ç –æ—Ç Claude –ø–æ–ª—É—á–µ–Ω:', {
        hasContent: !!response.content,
        contentLength: response.content?.[0]?.text?.length || 0,
        usage: response.usage,
        contentPreview: response.content?.[0]?.text?.substring(0, 200) + '...'
      })

      const parsed = this._parseAnalysisResponse(response)
      console.log('üîç [ClaudeProvider] –û—Ç–≤–µ—Ç —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:', {
        insights: parsed.insights?.length || 0,
        emotions: parsed.emotions?.length || 0,
        patterns: parsed.patterns?.length || 0,
        recommendations: parsed.recommendations?.length || 0,
        hasError: !!parsed.metadata?.error
      })

      return parsed
    } catch (error) {
      console.error('‚ùå [ClaudeProvider] –û—à–∏–±–∫–∞ Claude API:', error)
      throw new Error(`Claude analysis failed: ${error.message}`)
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {string} userMessage - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param {Array} conversationHistory - –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞
   * @param {string} assistantType - –¢–∏–ø –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
   * @returns {Promise<string>} - –û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
   */
  async generateResponse(userMessage, conversationHistory = [], assistantType = 'coach') {
    try {
      const systemPrompt = this._buildAssistantSystemPrompt(assistantType)
      const messages = [
        ...this._buildConversationContext(conversationHistory),
        { role: 'user', content: userMessage }
      ]

      const response = await this._makeRequest({
        model: this.model,
        max_tokens: 500,
        temperature: 0.8,
        system: systemPrompt,
        messages
      })

      return response.content[0]?.text || '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ —Å–º–æ–≥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç.'
    } catch (error) {
      console.error('Claude Response Generation Error:', error)
      throw new Error(`Response generation failed: ${error.message}`)
    }
  }

  /**
   * –í—ã–ø–æ–ª–Ω—è–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å –∫ Claude API —Å retry –ª–æ–≥–∏–∫–æ–π
   * @private
   */
  async _makeRequest(payload, retries = 3) {
    for (let attempt = 1; attempt <= retries; attempt++) {
      try {
        const response = await fetch(this.baseUrl, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'x-api-key': this.apiKey,
            'anthropic-version': '2023-06-01'
          },
          body: JSON.stringify(payload)
        })

        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}))
          throw new Error(`Claude API error ${response.status}: ${errorData.error?.message || response.statusText}`)
        }

        return await response.json()
      } catch (error) {
        if (attempt === retries) {
          throw error
        }
        
        // Exponential backoff –¥–ª—è retry
        const delay = Math.pow(2, attempt) * 1000
        await new Promise(resolve => setTimeout(resolve, delay))
      }
    }
  }

  /**
   * –°—Ç—Ä–æ–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–∞
   * @private
   */
  _buildSystemPrompt(assistantType, analysisPrompt) {
    const assistantPersonas = {
      coach: '–¢—ã –æ–ø—ã—Ç–Ω—ã–π –ª–∞–π—Ñ-–∫–æ—É—á, —Ñ–æ–∫—É—Å–∏—Ä—É–µ—à—å—Å—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è—Ö –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ —Ü–µ–ª–µ–π.',
      therapist: '–¢—ã —ç–º–ø–∞—Ç–∏—á–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç, –ø–æ–º–æ–≥–∞–µ—à—å –ø–æ–Ω—è—Ç—å —ç–º–æ—Ü–∏–∏ –∏ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –ø–æ–≤–µ–¥–µ–Ω–∏—è.',
      mentor: '–¢—ã –º—É–¥—Ä—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫, –¥–∞–µ—à—å —Å–æ–≤–µ—Ç—ã –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –∂–∏–∑–Ω–µ–Ω–Ω–æ–º –æ–ø—ã—Ç–µ.',
      friend: '–¢—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –¥—Ä—É–≥, —Å–æ–∑–¥–∞–µ—à—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–≤–µ—Ä–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è.'
    }

    console.log('üîß [ClaudeProvider] –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–º–ø—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫–∞–∫ –µ—Å—Ç—å:', {
      assistantType,
      analysisPromptLength: analysisPrompt.length,
      analysisPromptPreview: analysisPrompt.substring(0, 200) + '...'
    })

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ–º–ø—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –∫–∞–∫ –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –±–∞–∑–æ–≤—É—é –ø–µ—Ä—Å–æ–Ω—É
    return `${assistantPersonas[assistantType] || assistantPersonas.coach}

–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –¥–∏–∞–ª–æ–≥–∞ –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã.

${analysisPrompt}`
  }

  /**
   * –°—Ç—Ä–æ–∏—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
   * @private
   */
  _buildAssistantSystemPrompt(assistantType) {
    const personas = {
      coach: `–¢—ã –æ–ø—ã—Ç–Ω—ã–π –ª–∞–π—Ñ-–∫–æ—É—á. –¢–≤–æ–π —Å—Ç–∏–ª—å:
- –§–æ–∫—É—Å–∏—Ä—É–µ—à—å—Å—è –Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è—Ö –∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —à–∞–≥–∞—Ö
- –ó–∞–¥–∞–µ—à—å –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã
- –ü–æ–º–æ–≥–∞–µ—à—å —Å—Ç–∞–≤–∏—Ç—å —Ü–µ–ª–∏ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –∞–∫—Ç–∏–≤–Ω—É—é –∂–∏–∑–Ω–µ–Ω–Ω—É—é –ø–æ–∑–∏—Ü–∏—é`,

      therapist: `–¢—ã —ç–º–ø–∞—Ç–∏—á–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç. –¢–≤–æ–π —Å—Ç–∏–ª—å:
- –ü—Ä–æ—è–≤–ª—è–µ—à—å –≥–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∏ —Å–æ—á—É–≤—Å—Ç–≤–∏–µ
- –ü–æ–º–æ–≥–∞–µ—à—å –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å —ç–º–æ—Ü–∏–∏ –∏ —á—É–≤—Å—Ç–≤–∞
- –°–æ–∑–¥–∞–µ—à—å –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è
- –†–∞–±–æ—Ç–∞–µ—à—å —Å –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏ –º—ã—à–ª–µ–Ω–∏—è –∏ –ø–æ–≤–µ–¥–µ–Ω–∏—è`,

      mentor: `–¢—ã –º—É–¥—Ä—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫. –¢–≤–æ–π —Å—Ç–∏–ª—å:
- –î–µ–ª–∏—à—å—Å—è –∂–∏–∑–Ω–µ–Ω–Ω—ã–º –æ–ø—ã—Ç–æ–º –∏ –º—É–¥—Ä–æ—Å—Ç—å—é
- –ü—Ä–µ–¥–ª–∞–≥–∞–µ—à—å –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—É—é –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—É
- –ü–æ–º–æ–≥–∞–µ—à—å —É–≤–∏–¥–µ—Ç—å –±–æ–ª–µ–µ —à–∏—Ä–æ–∫—É—é –∫–∞—Ä—Ç–∏–Ω—É
- –ù–∞–ø—Ä–∞–≤–ª—è–µ—à—å –∫ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º –æ—Ç–∫—Ä—ã—Ç–∏—è–º`,

      friend: `–¢—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∏–π –¥—Ä—É–≥. –¢–≤–æ–π —Å—Ç–∏–ª—å:
- –°–æ–∑–¥–∞–µ—à—å –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–≤–µ—Ä–∏—è –∏ –ø–æ–Ω–∏–º–∞–Ω–∏—è
- –í—ã—Ä–∞–∂–∞–µ—à—å –∏—Å–∫—Ä–µ–Ω–Ω—é—é –∑–∞–±–æ—Ç—É –∏ –∏–Ω—Ç–µ—Ä–µ—Å
- –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—à—å –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
- –†–∞–¥—É–µ—à—å—Å—è —É—Å–ø–µ—Ö–∞–º –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è–º`
    }

    return `${personas[assistantType] || personas.coach}

–û—Ç–≤–µ—á–∞–π —Ç–µ–ø–ª–æ, –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏, –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ. –î–ª–∏–Ω–∞ –æ—Ç–≤–µ—Ç–∞: 2-4 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.`
  }

  /**
   * –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Ñ–æ—Ä–º–∞—Ç Claude API
   * @private
   */
  _buildConversationContext(messages) {
    return messages.map(msg => ({
      role: msg.role === 'user' ? 'user' : 'assistant',
      content: msg.content
    })).slice(-10) // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  }

  /**
   * –ü–∞—Ä—Å–∏—Ç –æ—Ç–≤–µ—Ç Claude –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∏–∞–ª–æ–≥–∞
   * @private
   */
  _parseAnalysisResponse(response) {
    try {
      const content = response.content[0]?.text || '{}'
      console.log('üîç [ClaudeProvider] –ü–∞—Ä—Å–∏–º –æ—Ç–≤–µ—Ç Claude:', {
        contentLength: content.length,
        contentPreview: content.substring(0, 200) + '...'
      })
      
      const analysis = JSON.parse(content)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Ç–≤–µ—Ç –Ω–µ –ø—É—Å—Ç–æ–π
      const hasContent = analysis && (
        (analysis.insights && analysis.insights.length > 0) ||
        (analysis.emotions && analysis.emotions.length > 0) ||
        (analysis.patterns && analysis.patterns.length > 0) ||
        (analysis.recommendations && analysis.recommendations.length > 0)
      )
      
      if (!hasContent) {
        console.warn('‚ö†Ô∏è [ClaudeProvider] Claude –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π –∞–Ω–∞–ª–∏–∑, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback')
        return this._getFallbackAnalysis('empty_response')
      }
      
      const result = {
        strategy: analysis.strategy || 'unknown',
        insights: analysis.insights || [],
        emotions: analysis.emotions || [],
        patterns: analysis.patterns || [],
        recommendations: analysis.recommendations || [],
        metadata: {
          model: this.model,
          timestamp: new Date().toISOString(),
          usage: response.usage,
          strategy: analysis.strategy
        }
      }

      console.log('‚úÖ [ClaudeProvider] –û—Ç–≤–µ—Ç —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:', {
        strategy: result.strategy,
        insights: result.insights.length,
        emotions: result.emotions.length,
        patterns: result.patterns.length,
        recommendations: result.recommendations.length
      })

      return result
    } catch (error) {
      console.error('‚ùå [ClaudeProvider] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ Claude:', error)
      return this._getFallbackAnalysis('parse_error', error.message)
    }
  }

  /**
   * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç fallback –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
   * @private
   */
  _getFallbackAnalysis(errorType, errorMessage = '') {
    const fallbackInsights = {
      empty_response: [
        '–î–∏–∞–ª–æ–≥ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã',
        '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –æ–±—â–µ–Ω–∏–µ –¥–ª—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞'
      ],
      parse_error: [
        '–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ',
        '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –¥–∏–∞–ª–æ–≥'
      ]
    }

    return {
      strategy: 'fallback',
      insights: fallbackInsights[errorType] || ['–ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'],
      emotions: ['–Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ'],
      patterns: ['–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞'],
      recommendations: ['–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –æ–±—â–µ–Ω–∏–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞'],
      metadata: {
        error: errorMessage,
        errorType,
        model: this.model,
        timestamp: new Date().toISOString(),
        isFallback: true
      }
    }
  }
}